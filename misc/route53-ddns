#!/usr/bin/env bash
# route53-ddns - Automatic Route53 WAN IP address update

set -o errexit          # Exit on most errors (see the manual)
set -o nounset          # Disallow expansion of unset variables
set -o pipefail         # Use last non-zero exit code in a pipeline
#set -o xtrace          # Trace the execution of the script (debug)

# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT
HOST_ZONE_ID=$(nvram get host_zone_id)
SUBDOMAINS=(
  'home.nickficano.com.'
  'sip.nickficano.com.'
  'vpn.nickficano.com.'
  '*.home.nickficano.com.'
)

run_route53_ddns_update() {
  wan_ip="$(get_wan_ip)"
  if is_dns_up_to_date; then
    log 'your route53 dns is already up-to-date'
  else
    for subdomain in "${SUBDOMAINS[@]}"; do
      update_record $subdomain $wan_ip
      log "$subdomain updated successfully"
    done
  fi
  log 'finished updating route53 dns'
  exit 0
}

get_wan_ip() {
  curl -s 'https://api.ipify.org?format=text'
}

get_dotfiles_prefix() {
  fp="$(readlink -f ${0})"
  dir=$(dirname $fp)
  cd $dir || exit 1
  echo "$(git rev-parse --show-toplevel)"
}

update_record() {
  comment="update via ddns script $(date +"%F %T,%3N")"
  subdomain="$1"
  ip="$2"
  fp="$(get_dotfiles_prefix)/misc/resource-record-set.json"
  record=$(
    sed -e "s/\$1/$comment/" \
        -e "s/\$2/$subdomain/" \
        -e "s/\$3/$ip/" $fp
    )

  aws route53 change-resource-record-sets \
  --hosted-zone-id $HOST_ZONE_ID \
  --change-batch "$record"
}

get_record_sets() {
  aws route53 list-resource-record-sets \
  --hosted-zone-id $HOST_ZONE_ID
}

is_dns_up_to_date() {
  wan_ip="$(get_wan_ip)"
  log "wan ip address is $wan_ip"
  records=$(get_record_sets | jq -r '.[] | .[] .ResourceRecords[0] | .Value')
  echo "$records" | grep -o -q "$wan_ip"
}

log() {
  timestamp=$(date +"%b %d %H:%M:%S")
  script=$(basename "$0")
  message="$1"; shift
  # shellcheck disable=SC2059
  printf "$timestamp ${script}[$$]: $message\\n" "$@"
  logger -p cron.debug -t $script "$message"
}

run_route53_ddns_update

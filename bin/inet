#!/usr/bin/env bash
# inet - utility for gathering information about your local network.
set -e

isp () {
  whois "$(public_ip_address)" \
  | grep OrgName \
  | awk '{$1="";print}' \
  | xargs
}

public_ip_address () {
  echo "$(curl -s "https://api.ipify.org/")"
}

host_ip_address () {
  ifconfig \
  | egrep 'inet\s(192|172|10)' \
  | awk '{print $2}'
}

network_ip_address () {
  sipcalc "$(host_ip_address)" "$(network_mask_hex)" \
  | grep "Network address" \
  | awk '{print $4}'
}

network_mask () {
  sipcalc "$(host_ip_address)" "$(network_mask_hex)" \
  | grep "Network mask" \
  | awk '{print $4}' \
  | egrep -o '([0-9]{1,3}[.]){3}[0-9]{1,3}'
}

network_mask_bits () {
  sipcalc "$(host_ip_address)" "$(network_mask_hex)" \
  | grep "Network mask (bits)" \
  | awk '{print $5}'
}

network_mask_hex () {
  ifconfig \
  | egrep 'inet\s(192|172|10)' \
  | awk '{print $4}'
}

gateway_ip_address () {
  netstat -rn \
  | egrep 'default\s+(192|172|10)' \
  | awk '{print $2}'
}

lan_host_discovery () {
  sudo nmap \
  "$(network_ip_address)/$(network_mask_bits)" \
  -sn \
  -n \
  --min-parallelism 100 \
  | grep report \
  | awk '{print $5}'
}

modem_ip_address () {
  sudo nmap \
  -sS 192.168.100.1 192.168.0.1 10.0.0.1 10.1.10.1 \
  --min-parallelism 100 |
  egrep -o '([0-9]{1,3}[.]){3}[0-9]{1,3}'
}

probe_modem () {
  sudo nmap --min-parallelism 100 -A "$(modem_ip_address)"
}

probe_router () {
  sudo nmap --min-parallelism 100 -A "$(gateway_ip_address)"
}

usage () {
  echo "Usage: inet <command> <subcommand>"
  echo "Try 'inet --help' for more information."
}

unknown_command () {
  echo "ERROR: unknown command \"$1\""
  echo "Try 'inet --help' for more information."
}

help () {
cat <<EOF

inet - utility for gathering information about your local network.

Usage:
  inet <command>
  inet <command> <subcommand>

Commands:
  inet ip devices         discover all devices on your network.
  inet ip gateway         displays the address of your "network gateway",
                          or the edge device (ie: router) that sits between
                          you and another network (ie: the Internet).
  inet ip host            displays your host ip address
  inet ip modem           attempts to find the ip address of your modem
                          (first hop after your router/gateway).
  inet ip network         the common prefix of your private ip address, used
                          to refer to your subnet as a whole.
  inet ip private         alias to "ip host"
  inet ip public          the globally unique address assigned to your network
                          by your isp
  inet ip router          alias to "ip gateway"
  inet isp                displays the name of your isp
  inet probe modem        attempts to identify the operating system, open
                          ports, and running software on your modem.
  inet probe router       attempts to identify the operating system, open
                          ports, and running software on your router.
  inet subnet ip          displays your host subnet mask address ip.
  inet subnet bits        displays your host subnet mask address (as bits).
  inet subnet hex         displays your host subnet mask address (as hex).
EOF
}

if [ ! -x "$(command -v nmap)" ] || [ ! -x "$(command -v sipcalc)" ]; then
  echo "Error: 'nmap' and 'sipcalc' must first be installed."
  echo "To fix, try running: brew install nmap sipcalc"
  exit 1
fi

case "$@" in
  "ip devices"    ) lan_host_discovery ;;
  "ip gateway"    ) gateway_ip_address ;;
  "ip host"       ) host_ip_address ;;
  "ip modem"      ) modem_ip_address ;;
  "ip network"    ) network_ip_address ;;
  "ip private"    ) host_ip_address ;;
  "ip public"     ) public_ip_address ;;
  "ip router"     ) gateway_ip_address ;;
  "isp"           ) isp ;;
  "probe modem"   ) probe_modem ;;
  "probe router"  ) probe_router ;;
  "subnet bits"   ) network_mask_bits ;;
  "subnet hex"    ) network_mask_hex ;;
  "subnet ip"     ) network_mask ;;
  "--help"        ) help; exit 0 ;;
  "-h"            ) help; exit 0 ;;
  ""              ) usage; exit 0 ;;
  *               ) unknown_command "$@"; exit 1 ;;
esac
exit 0

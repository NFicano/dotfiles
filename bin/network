#!/usr/bin/env bash
# network - utility for gathering information about your local network.
set -e

get_isp_name () {
  whois "$(public_ip_address)" \
  | grep OrgName \
  | awk '{$1="";print}' \
  | xargs
}

public_ip_address () {
  echo "$(curl -s "https://api.ipify.org/")"
}

host_ip_address () {
  ifconfig \
  | egrep 'inet\s(192|172|10)' \
  | awk '{print $2}'
}

routing_table () {
  netstat -nr -f inet
}

network_ip_address () {
  sipcalc "$(host_ip_address)" "$(network_mask_hex)" \
  | grep "Network address" \
  | awk '{print $4}'
}

network_mask () {
  sipcalc "$(host_ip_address)" "$(network_mask_hex)" \
  | grep "Network mask" \
  | awk '{print $4}' \
  | egrep -o '([0-9]{1,3}[.]){3}[0-9]{1,3}'
}

network_mask_bits () {
  sipcalc "$(host_ip_address)" "$(network_mask_hex)" \
  | grep "Network mask (bits)" \
  | awk '{print $5}'
}

network_mask_hex () {
  ifconfig \
  | egrep 'inet\s(192|172|10)' \
  | awk '{print $4}'
}

gateway_ip_address () {
  netstat -rn \
  | egrep 'default\s+(192|172|10)' \
  | awk '{print $2}'
}

lan_host_discovery () {
  sudo nmap \
  "$(network_ip_address)/$(network_mask_bits)" \
  -sn \
  -n \
  --min-parallelism 100 \
  | grep report \
  | awk '{print $5}'
}

modem_ip_address () {
  sudo nmap \
  -sS 192.168.100.1 192.168.0.1 10.0.0.1 10.1.10.1 \
  --min-parallelism 100 |
  egrep -o '([0-9]{1,3}[.]){3}[0-9]{1,3}'
}

probe_modem () {
  sudo nmap --min-parallelism 100 -A "$(modem_ip_address)"
}

probe_router () {
  sudo nmap --min-parallelism 100 -A "$(gateway_ip_address)"
}

usage () {
  echo "Usage: network <command> <subcommand>"
  echo "Try 'network --help' for more information."
}

unknown_command () {
  echo "ERROR: unknown command \"$1\""
  echo "Try 'network --help' for more information."
}

get_commands () {
  echo "$(help)" | grep -o '\-[a-z]*'
}

help () {
cat <<EOF

network â€“ utility for gathering information about your local network.

Commands:
  -getlanhosts                discover all devices on your network.
  -getgatewayip               displays the address of your "network gateway",
                              or the edge device (ie: router) that sits
                              between you and another network (ie: the
                              Internet).
  -gethostip                  displays your host ip address
  -getmodemip                 attempts to find the ip address of your modem
                              (first hop after your router/gateway).
  -getnetworkip               the common prefix of your private ip address,
                              used to refer to your subnet as a whole.
  -getprivateip               alias to "ip host"
  -getpublicip                the globally unique address assigned to your
                              network by your isp
  -getroutingtable            display your routing table.
  -getrouterip                alias to "ip gateway"
  -getispname                 displays the name of your isp
  -probe <modem|router>       attempts to identify the operating system, open
                              ports, and running software on your modem or
                              router.
  -getsubnet [-o <bit|hex>]   displays your host subnet mask address ip.
  -help|-h                    displays help and usage.
EOF
}

if [ ! -x "$(command -v nmap)" ] || [ ! -x "$(command -v sipcalc)" ]; then
  echo "Error: 'nmap' and 'sipcalc' must first be installed."
  echo "To fix, try running: brew install nmap sipcalc"
  exit 1
fi

case "$@" in
  "-getlanhosts"           ) lan_host_discovery ;;
  "-getgatewayip"          ) gateway_ip_address ;;
  "-gethostip"             ) host_ip_address ;;
  "-getmodemip"            ) modem_ip_address ;;
  "-getnetworkip"          ) network_ip_address ;;
  "-getprivateip"          ) host_ip_address ;;
  "-getpublicip"           ) public_ip_address ;;
  "-getrouterip"           ) gateway_ip_address ;;
  "-getispname"            ) get_isp_name ;;
  "-probe modem"           ) probe_modem ;;
  "-probe router"          ) probe_router ;;
  "-getroutingtable"       ) routing_table ;;
  "-getsubnet -o bits"     ) network_mask_bits ;;
  "-getsubnet -o hex"      ) network_mask_hex ;;
  "-getsubnet"             ) network_mask ;;
  "listcommands"           ) get_commands; exit 0 ;;
  "--help"                 ) help; exit 0 ;;
  "-h"                     ) help; exit 0 ;;
  ""                       ) usage; exit 0 ;;
  *                        ) unknown_command "$@"; exit 1 ;;
esac
exit 0
